theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_discrete(breaks = state_order)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_discrete(breaks = state_order, guide = "bottom")
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_discrete(breaks = state_order)
states_tidy %>%
ggplot(aes(x = year, y = revenue, fill = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_fill_discrete(breaks = state_order)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_fill_discrete(breaks = state_order)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_discrete(breaks = state_order)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(breaks = state_order)
color_region <- rbind(paletteer_dynamic(cartography, orange.pal, n = 12),
paletteer_dynamic(cartography, blue.pal, n = 9),
paletteer_dynamic(cartography, green.pal, n = 16),
paletteer_dynamic(cartography, sand.pal, n = 13))
View(color_region)
color_region <- c(paletteer_dynamic(cartography, orange.pal, n = 12),
paletteer_dynamic(cartography, blue.pal, n = 9),
paletteer_dynamic(cartography, green.pal, n = 16),
paletteer_dynamic(cartography, sand.pal, n = 13))
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, breaks = state_order)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_continuous(breaks = state_order)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_discrete(breaks = state_order)
View(state_order)
state_order
state_order$state
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_discrete(breaks = state_order$state)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
#geom_line(aes(y = revenue, group = state), color = "gray40", alpha = .3) +
#geom_line(aes(y = avg_revenue, color = region), size = 1.1) +
geom_line() +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, breaks = state_order$state)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = filter(region == "North Central"))) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, breaks = state_order$state)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = filter(region == "North Central"))) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, breaks = state_order$state)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = filter(states_tidy, region == "North Central"))) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, breaks = state_order$state)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(data = filter(states_tidy, region == "North Central"),
color = state)) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, breaks = state_order$state)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(data = filter(states_tidy, region == "North Central"),
color = state)) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(data = filter(states_tidy, region == "North Central"),
color = state)) +
scale_color_paletteer_c(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(data = filter(states_tidy, region == "North Central"),
color = state)) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(data = filter(states_tidy, region == "North Central"),
color = state)) +
scale_color_paletteer_d(cartography, orange.pal) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(aes(data = filter(states_tidy, region == "North Central"))) +
scale_color_paletteer_d(cartography, orange.pal) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = filter(states_tidy, region == "North Central")) +
scale_color_paletteer_d(cartography, orange.pal) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = filter(states_tidy, region == "North Central")) +
scale_color_paletteer_dynamic(cartography, orange.pal) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = filter(states_tidy, region == "North Central")) +
scale_color_paletteer_dynamic(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = filter(states_tidy, region == "North Central")) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
#facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = filter(states_tidy, region == "North Central")) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
facet_grid(~source) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = filter(states_tidy, region == "North Central")) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = filter(states_tidy, region == "North Central")) +
scale_color_paletteer_d(cartography, orange.pal, dynamic = TRUE) +
geom_line(data = filter(states_tidy, region == "Northeast")) +
scale_color_paletteer_d(cartography, blue.pal, dynamic = TRUE) +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = filter(states_tidy, region == "North Central")) +
geom_line(data = filter(states_tidy, region == "Northeast")) +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar)
colors_nc <- paletteer_dynamic(cartography, orange.pal, n = 12)
colors_ne <- paletteer_dynamic(cartography, blue.pal, n = 9)
colors_s <- paletteer_dynamic(cartography, green.pal, n = 16)
color_w <- paletteer_dynamic(cartography, sand.pal, n = 13)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = filter(states_tidy, region == "North Central"),
color = colors_nc) +
geom_line(data = filter(states_tidy, region == "Northeast"),
color = colors_ne) +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar)
View(states_tidy)
states_tidy %>% count(region,state)
aa <- states_tidy %>% count(region, state)
View(aa)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line() +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line() +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar) +
scale_x_discrete(breaks = state_order$state)
View(state_order)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line() +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region,
breaks = state_order$state)
state_labels %>%
count(region)
color_region <- c(paletteer_dynamic(cartography, orange.pal, n = 12),
paletteer_dynamic(cartography, blue.pal, n = 9),
paletteer_dynamic(cartography, green.pal, n = 16),
paletteer_dynamic(cartography, sand.pal, n = 13))
color_region
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line() +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region,
breaks = state_order$state)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line() +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(breaks = state_order$state,
values = color_region)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line() +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar) +
scale_color_discrete(breaks = state_order$state) +
scale_color_manual(values = color_region)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = state)) +
geom_line(data = arrange(states_tidy, region)) +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region)
ggplot(aes(x = year, y = revenue, color = factor(state, levels = state_order$state)) +
sad
states_tidy %>%
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = factor(state, levels = state_order$state))) +
geom_line() +
theme_minimal() +
facet_grid(source~region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region)
states_tidy %>%
ggplot(aes(x = year, y = revenue, color = factor(state, levels = state_order$state))) +
geom_line() +
theme_minimal() +
facet_grid(~source) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .3) +
geom_line(aes(fill = region)) +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .3) +
geom_line(aes(y = avg_revenue), color = "gray40") +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .5) +
geom_line(aes(y = avg_revenue), color = "gray40") +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, name = "non")
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .5) +
geom_line(aes(y = avg_revenue), color = "gray40") +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, name = NULL)
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .5) +
geom_line(aes(y = avg_revenue), color = "gray40") +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, name = NULL) +
labs(x = NULL, y = "Annual Revenue")
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .5) +
geom_line(aes(y = avg_revenue), color = "gray40") +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, name = NULL) +
labs(x = NULL, y = "Annual Revenue",
title = "Annual Revenue by US Region and State")
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .8) +
geom_line(aes(y = avg_revenue), color = "gray40", linetype = "dotted") +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, name = NULL) +
labs(x = NULL, y = "Annual Revenue",
title = "Annual Revenue by US Region and State")
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .8) +
geom_line(aes(y = avg_revenue), color = "black", linetype = "dashed") +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, name = NULL) +
labs(x = NULL, y = "Annual Revenue",
title = "Annual Revenue by US Region and State")
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .5) +
geom_line(aes(y = avg_revenue), color = "black", linetype = "dashed") +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, guide = "none") +
labs(x = NULL, y = "Annual Revenue",
title = "Annual Revenue by US Region and State")
states_tidy %>%
ggplot(aes(x = year, y = revenue)) +
geom_line(aes(color = factor(state, levels = state_order$state)), alpha = .5) +
geom_line(aes(y = avg_revenue), color = "black") +
theme_minimal() +
facet_grid(source ~ region) +
scale_y_log10(labels = scales::dollar) +
scale_color_manual(values = color_region, guide = "none") +
labs(x = NULL, y = "Annual Revenue",
title = "Annual Revenue by US Region and State")
?row_to_columns
??rownames_to_columns
??rownames_to_column
install.packages("ggthemesassist")
?ppoints
devtools::install_github("wilkelab/ungeviz")
getwd()
library(devtools)
library(roxygen2)
install(lurrdatviz)
install("lurrdatviz")
library(tidyverse)
subnum <- c(201:218,220:229,231:240)
nsub <- length(subnum)
rois <- c("ahip","mofc","phip")
nroi <- length(rois)
basedir <- getwd()
basedir
setwd("./finalproj/dicat/")
basedir <- getwd()
dicat_list <- list()
for(r in 1:nroi){
roidir <- str_c(basedir, "/b_", rois[r])
## Exemplar fits
exfits_tmp <- tibble(run1 = rep(0,nsub), run2 = rep(0,nsub),
run3 = rep(0,nsub), run4 = rep(0,nsub))
for(s in 1:nsub){
# Load mean / sd
mn <- rio::import(str_c(roidir, "/", subnum[s], "_pe2_mean_b_", rois[r], ".txt"))
stdev <- rio::import(str_c(roidir, "/", subnum[s], "_pe2_sd_b_", rois[r], ".txt"))
# Calculate effect size (mean/sd)
exfits_tmp[s,1:4] <- mn/stdev
}
exfits_tmp <- exfits_tmp %>%
mutate(avg = mean(c(run1,run2,run3,run4)))
colnames(exfits_tmp) <- str_c("exfit_", rois[r], "_", colnames(exfits_tmp))
## Prototype fits
protfits_tmp <- tibble(run1 = rep(0,nsub), run2 = rep(0,nsub),
run3 = rep(0,nsub), run4 = rep(0,nsub))
for(s in 1:nsub){
# Load mean / sd
mn <- rio::import(str_c(roidir, "/", subnum[s], "_pe3_mean_b_", rois[r], ".txt"))
stdev <- rio::import(str_c(roidir, "/", subnum[s], "_pe3_sd_b_", rois[r], ".txt"))
# Calculate effect size (mean/sd)
protfits_tmp[s,1:4] <- mn/stdev
}
protfits_tmp <- protfits_tmp %>%
mutate(avg = mean(c(run1,run2,run3,run4)))
colnames(protfits_tmp) <- str_c("protfit_", rois[r], "_", colnames(protfits_tmp))
# Combine and save into list
mdlfits <- cbind(exfits_tmp, protfits_tmp)
dicat_list[[r]] <- mdlfits
}
dicat_list[[1]]
dicat <- map_dfc(dicat_list, as.data.frame) %>%
mutate(subnum = subnum) %>%
select(subnum, 1:31)
View(dicat)
write.csv(dicat, file = "../dicat.csv")
setwd("../../lurrdatviz/")
rio::import("~/OneDrive - University Of Oregon/School Work/edld610/finalproj/facat.csv")
facat <- rio::import("~/OneDrive - University Of Oregon/School Work/edld610/finalproj/facat.csv")
View(facat)
save(facat, file = "data/facat.RData")
save(dicat, file = "data/dicat.RData")
getwd()
setwd("..")
install("lurrdatviz/")
library(lurrdatviz)
aa <- facat
View(aa)
devtools::install_github("rstudio/distill")
devtools::install_github("lfrank14/lurrdatviz")
library(lurrdatviz)
